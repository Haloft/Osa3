{"version":3,"sources":["components/Person.js","services/persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","components/Info.js","App.js","index.js"],"names":["Person","props","person","name","number","id","onClick","delPerson","baseUrl","axios","get","then","response","data","newObject","post","put","delete","PersonForm","value","newName","onChange","handlePersonChange","newNumber","handleNumberChange","Notification","successMessage","console","log","className","errorMessage","Filter","newFilter","handleFilter","Info","infoMessage","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setErrorMessage","setSuccessMessage","setInfoMessage","useEffect","personService","initialNotes","res","personsToShow","filter","toLowerCase","includes","addPerson","event","preventDefault","exists","find","notexists","undefined","updPerson","createPerson","returnedNote","concat","setTimeout","catch","error","changedPerson","window","confirm","map","p","persona","target","onSubmit","type","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71739c62.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ( props ) => {\r\n  return (\r\n   <span> {props.person.name} {props.person.number} {props.person.id} <button onClick={props.delPerson}>Poista</button><br /> </span>\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\nconst getInfo = () => {\r\n  const request = axios.get('/info')\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll,\r\n  getInfo: getInfo, \r\n  create: create, \r\n  update: update ,\r\n  deletePerson: deletePerson\r\n}","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n        <div> \r\n            name: <input\r\n            value={props.newName}\r\n            onChange={props.handlePersonChange} />\r\n        <br />\r\n            number: <input\r\n            value={props.newNumber}  \r\n            onChange={props.handleNumberChange}\r\n            />\r\n            \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n  if(props.successMessage) {\r\n  console.log(props.successMessage)\r\n    if (props.successMessage === null) {\r\n      return null\r\n    }else{\r\n  \r\n    return (\r\n      <div className=\"success\">\r\n        {props.successMessage}\r\n      </div>\r\n    )\r\n  }\r\n}else {\r\n  if(props.errorMessage === null) {\r\n    return null\r\n\r\n  }else {\r\n  return (\r\n    <div className=\"error\">\r\n      {props.errorMessage}\r\n    </div>\r\n  )\r\n}\r\n}\r\n}\r\n  \r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            Filter shown with: <input\r\n            value={props.newFilter}\r\n            onChange={props.handleFilter}\r\n            />\r\n        </div> \r\n    )\r\n\r\n\r\n\r\n}\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Info = ( {infoMessage} ) => {\r\n    if(infoMessage !== null) {\r\n        return (\r\n            <p>{infoMessage}</p>\r\n        )\r\n    }else {\r\n        return null\r\n            \r\n           \r\n\r\n    }\r\n  \r\n}\r\n\r\nexport default Info","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport Info from './components/Info'\nimport './index.css'\n\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [infoMessage, setInfoMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n      })\n      \n  }, [])\n\n  useEffect(() => {\n    personService\n    .getInfo()\n    .then(res => {\n      setInfoMessage(res)\n    })\n\n      \n  }, [])\n\n\n  \n\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const rows = () => personsToShow.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      delPerson={() => delPerson(person.id)}\n    />\n\n  )\n\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const exists = persons.find(person => person.name === newName)\n    const notexists = { ...exists, number: newNumber }\n\n    exists !== undefined ? updPerson(notexists) : createPerson()\n  }\n\n  const createPerson = () => {\n    const personObject = {\n      name: newName,\n      number: newNumber,\n\n    }\n    personService\n      .create(personObject)\n      .then(returnedNote => {\n        setPersons(persons.concat(returnedNote))\n        setNewNumber(\"\")\n        setNewName(\"\")\n        setSuccessMessage(\n          `${newName} added`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000) \n        setNewName('')\n        setNewNumber('')\n      })\n\n\n  }\n\n  const updPerson = (changedPerson) => {\n    console.log(changedPerson)\n    if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      personService\n        .update(changedPerson.id, changedPerson)\n        .then(returnedNote => {\n          setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedNote))\n          setNewName(\"\")\n          setNewNumber(\"\")\n          setSuccessMessage(\n            `${newName}'s number was changed`\n          )\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setPersons(persons.filter(p => p.id !== changedPerson.id))\n          console.log('fail')\n          setErrorMessage(\n            `${newName}'s number wasn't updated, there was an error.`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const delPerson = id => {\n    console.log(id)\n    const persona = persons.find(p => p.id === id)\n    console.log(persona)\n    window.confirm(`Delete '${persona.name}' ?`)\n\n    personService\n      .deletePerson(id)\n      .then(res => {\n        console.log(res)\n        setPersons(persons.filter(p => id !== p.id))\n        setSuccessMessage(\n          `${persona.name} was deleted`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setPersons(persons.filter(p => p.id !== id))\n        console.log('fail')\n        setErrorMessage(\n          `${persona.name} was already deleted from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification successMessage={successMessage}\n        errorMessage={errorMessage} />\n      <Filter\n        handleFilter={handleFilter}\n        newFilter={newFilter}\n      />\n\n      <form onSubmit={addPerson}>\n        <h2>Add a New</h2>\n        <PersonForm\n          addPerson={addPerson}\n          newName={newName}\n          handlePersonChange={handlePersonChange}\n          handleNumberChange={handleNumberChange}\n          newNumber={newNumber}\n        />\n\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        {rows()}\n      </div>\n     \n      <Info infoMessage={infoMessage}/>\n      \n  \n    </div>\n  )\n\n}\n\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}